// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.27.1
// source: compare.proto

package protocmp

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID     int32   `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Name   string  `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	Effect float32 `protobuf:"fixed32,3,opt,name=Effect,proto3" json:"Effect,omitempty"`
	Num    uint32  `protobuf:"varint,4,opt,name=Num,proto3" json:"Num,omitempty"`
}

func (x *Item) Reset() {
	*x = Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_compare_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Item) ProtoMessage() {}

func (x *Item) ProtoReflect() protoreflect.Message {
	mi := &file_compare_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Item.ProtoReflect.Descriptor instead.
func (*Item) Descriptor() ([]byte, []int) {
	return file_compare_proto_rawDescGZIP(), []int{0}
}

func (x *Item) GetID() int32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *Item) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Item) GetEffect() float32 {
	if x != nil {
		return x.Effect
	}
	return 0
}

func (x *Item) GetNum() uint32 {
	if x != nil {
		return x.Num
	}
	return 0
}

type User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID       int32    `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Name     string   `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	Level    uint32   `protobuf:"varint,3,opt,name=Level,proto3" json:"Level,omitempty"`
	Exp      uint64   `protobuf:"varint,4,opt,name=Exp,proto3" json:"Exp,omitempty"`
	Type     bool     `protobuf:"varint,5,opt,name=Type,proto3" json:"Type,omitempty"`
	EquipIDs []uint32 `protobuf:"varint,7,rep,packed,name=EquipIDs,proto3" json:"EquipIDs,omitempty"`
	Items    []*Item  `protobuf:"bytes,8,rep,name=Items,proto3" json:"Items,omitempty"`
}

func (x *User) Reset() {
	*x = User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_compare_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_compare_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_compare_proto_rawDescGZIP(), []int{1}
}

func (x *User) GetID() int32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *User) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *User) GetLevel() uint32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *User) GetExp() uint64 {
	if x != nil {
		return x.Exp
	}
	return 0
}

func (x *User) GetType() bool {
	if x != nil {
		return x.Type
	}
	return false
}

func (x *User) GetEquipIDs() []uint32 {
	if x != nil {
		return x.EquipIDs
	}
	return nil
}

func (x *User) GetItems() []*Item {
	if x != nil {
		return x.Items
	}
	return nil
}

type BenchMarkStruct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Int     int32             `protobuf:"varint,1,opt,name=Int,proto3" json:"Int,omitempty"`
	Uint    uint32            `protobuf:"varint,2,opt,name=Uint,proto3" json:"Uint,omitempty"`
	Float   float32           `protobuf:"fixed32,3,opt,name=Float,proto3" json:"Float,omitempty"`
	Double  float64           `protobuf:"fixed64,4,opt,name=Double,proto3" json:"Double,omitempty"`
	Bool    bool              `protobuf:"varint,5,opt,name=Bool,proto3" json:"Bool,omitempty"`
	String_ string            `protobuf:"bytes,6,opt,name=String,proto3" json:"String,omitempty"`
	Array   []int32           `protobuf:"varint,7,rep,packed,name=Array,proto3" json:"Array,omitempty"`
	Map     map[string]uint32 `protobuf:"bytes,8,rep,name=Map,proto3" json:"Map,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	Child   *BenchChild       `protobuf:"bytes,9,opt,name=child,proto3" json:"child,omitempty"`
}

func (x *BenchMarkStruct) Reset() {
	*x = BenchMarkStruct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_compare_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BenchMarkStruct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BenchMarkStruct) ProtoMessage() {}

func (x *BenchMarkStruct) ProtoReflect() protoreflect.Message {
	mi := &file_compare_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BenchMarkStruct.ProtoReflect.Descriptor instead.
func (*BenchMarkStruct) Descriptor() ([]byte, []int) {
	return file_compare_proto_rawDescGZIP(), []int{2}
}

func (x *BenchMarkStruct) GetInt() int32 {
	if x != nil {
		return x.Int
	}
	return 0
}

func (x *BenchMarkStruct) GetUint() uint32 {
	if x != nil {
		return x.Uint
	}
	return 0
}

func (x *BenchMarkStruct) GetFloat() float32 {
	if x != nil {
		return x.Float
	}
	return 0
}

func (x *BenchMarkStruct) GetDouble() float64 {
	if x != nil {
		return x.Double
	}
	return 0
}

func (x *BenchMarkStruct) GetBool() bool {
	if x != nil {
		return x.Bool
	}
	return false
}

func (x *BenchMarkStruct) GetString_() string {
	if x != nil {
		return x.String_
	}
	return ""
}

func (x *BenchMarkStruct) GetArray() []int32 {
	if x != nil {
		return x.Array
	}
	return nil
}

func (x *BenchMarkStruct) GetMap() map[string]uint32 {
	if x != nil {
		return x.Map
	}
	return nil
}

func (x *BenchMarkStruct) GetChild() *BenchChild {
	if x != nil {
		return x.Child
	}
	return nil
}

type BenchChild struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Int     int32  `protobuf:"varint,1,opt,name=Int,proto3" json:"Int,omitempty"`
	String_ string `protobuf:"bytes,2,opt,name=String,proto3" json:"String,omitempty"`
}

func (x *BenchChild) Reset() {
	*x = BenchChild{}
	if protoimpl.UnsafeEnabled {
		mi := &file_compare_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BenchChild) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BenchChild) ProtoMessage() {}

func (x *BenchChild) ProtoReflect() protoreflect.Message {
	mi := &file_compare_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BenchChild.ProtoReflect.Descriptor instead.
func (*BenchChild) Descriptor() ([]byte, []int) {
	return file_compare_proto_rawDescGZIP(), []int{3}
}

func (x *BenchChild) GetInt() int32 {
	if x != nil {
		return x.Int
	}
	return 0
}

func (x *BenchChild) GetString_() string {
	if x != nil {
		return x.String_
	}
	return ""
}

var File_compare_proto protoreflect.FileDescriptor

var file_compare_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x72, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6d, 0x70, 0x22, 0x54, 0x0a, 0x04, 0x49, 0x74, 0x65,
	0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x49,
	0x44, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x12, 0x10, 0x0a,
	0x03, 0x4e, 0x75, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x4e, 0x75, 0x6d, 0x22,
	0xa8, 0x01, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x4c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x4c, 0x65, 0x76,
	0x65, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x45, 0x78, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x03, 0x45, 0x78, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x45, 0x71, 0x75, 0x69,
	0x70, 0x49, 0x44, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x08, 0x45, 0x71, 0x75, 0x69,
	0x70, 0x49, 0x44, 0x73, 0x12, 0x24, 0x0a, 0x05, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x08, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6d, 0x70, 0x2e, 0x49,
	0x74, 0x65, 0x6d, 0x52, 0x05, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x22, 0xc1, 0x02, 0x0a, 0x0f, 0x42,
	0x65, 0x6e, 0x63, 0x68, 0x4d, 0x61, 0x72, 0x6b, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x12, 0x10,
	0x0a, 0x03, 0x49, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x49, 0x6e, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x55, 0x69, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04,
	0x55, 0x69, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x05, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x44, 0x6f,
	0x75, 0x62, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x44, 0x6f, 0x75, 0x62,
	0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x42, 0x6f, 0x6f, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x04, 0x42, 0x6f, 0x6f, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x14,
	0x0a, 0x05, 0x41, 0x72, 0x72, 0x61, 0x79, 0x18, 0x07, 0x20, 0x03, 0x28, 0x05, 0x52, 0x05, 0x41,
	0x72, 0x72, 0x61, 0x79, 0x12, 0x34, 0x0a, 0x03, 0x4d, 0x61, 0x70, 0x18, 0x08, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x22, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6d, 0x70, 0x2e, 0x42, 0x65, 0x6e,
	0x63, 0x68, 0x4d, 0x61, 0x72, 0x6b, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x4d, 0x61, 0x70,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x03, 0x4d, 0x61, 0x70, 0x12, 0x2a, 0x0a, 0x05, 0x63, 0x68,
	0x69, 0x6c, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6d, 0x70, 0x2e, 0x42, 0x65, 0x6e, 0x63, 0x68, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x52,
	0x05, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x1a, 0x36, 0x0a, 0x08, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x36,
	0x0a, 0x0a, 0x42, 0x65, 0x6e, 0x63, 0x68, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x12, 0x10, 0x0a, 0x03,
	0x49, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x49, 0x6e, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x42, 0x3c, 0x5a, 0x3a, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x62, 0x75, 0x66,
	0x66, 0x65, 0x72, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x78,
	0x61, 0x6d, 0x70, 0x6c, 0x65, 0x73, 0x2f, 0x67, 0x6f, 0x2f, 0x74, 0x75, 0x74, 0x6f, 0x72, 0x69,
	0x61, 0x6c, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_compare_proto_rawDescOnce sync.Once
	file_compare_proto_rawDescData = file_compare_proto_rawDesc
)

func file_compare_proto_rawDescGZIP() []byte {
	file_compare_proto_rawDescOnce.Do(func() {
		file_compare_proto_rawDescData = protoimpl.X.CompressGZIP(file_compare_proto_rawDescData)
	})
	return file_compare_proto_rawDescData
}

var file_compare_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_compare_proto_goTypes = []any{
	(*Item)(nil),            // 0: protocmp.Item
	(*User)(nil),            // 1: protocmp.User
	(*BenchMarkStruct)(nil), // 2: protocmp.BenchMarkStruct
	(*BenchChild)(nil),      // 3: protocmp.BenchChild
	nil,                     // 4: protocmp.BenchMarkStruct.MapEntry
}
var file_compare_proto_depIdxs = []int32{
	0, // 0: protocmp.User.Items:type_name -> protocmp.Item
	4, // 1: protocmp.BenchMarkStruct.Map:type_name -> protocmp.BenchMarkStruct.MapEntry
	3, // 2: protocmp.BenchMarkStruct.child:type_name -> protocmp.BenchChild
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_compare_proto_init() }
func file_compare_proto_init() {
	if File_compare_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_compare_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_compare_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_compare_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*BenchMarkStruct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_compare_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*BenchChild); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_compare_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_compare_proto_goTypes,
		DependencyIndexes: file_compare_proto_depIdxs,
		MessageInfos:      file_compare_proto_msgTypes,
	}.Build()
	File_compare_proto = out.File
	file_compare_proto_rawDesc = nil
	file_compare_proto_goTypes = nil
	file_compare_proto_depIdxs = nil
}
